# include "station.h"

namespace ivg
{

// ===========================================================================
// 		constructors and destructor
// ===========================================================================

// ...........................................................................
Station::Station()
// ...........................................................................
{

}

// ...........................................................................
Station::Station( ivg::Matrix xyz0, ivg::Matrix vel0, ivg::Date refepoch,
                  std::vector<ivg::Date> discontinuity,
                  std::map<ivg::staname, std::string> names )
// ...........................................................................
{
    _pos0 = xyz0 ;
    _vel0 = vel0 ;
    _refepoch = refepoch ;
    _discontinuity = discontinuity ;
    _names = names ;
}

// ...........................................................................
Station::~Station() {}
// ...........................................................................

// ===========================================================================
// public methods
// ===========================================================================

// getter
// ...........................................................................
Matrix Station::get_xyz0() const
// ...........................................................................
{
    return _pos0;
}
// ...........................................................................
Matrix Station::get_xyz0_std() const
// ...........................................................................
{
    return _pos0_std;
}
// ...........................................................................
Matrix Station::get_vel0() const
// ...........................................................................
{
    return _vel0;
}
// ...........................................................................
ivg::Date Station::get_refepoch() const
// ...........................................................................
{
    return _refepoch;
}
// ...........................................................................
std::string Station::get_name( staname type )
// ...........................................................................
{
    if(type == MAXSTA)
    {
        for ( int i = 0; i<MAXSTA; i++ )
        {
            if (get_name((ivg::staname) i) != "")
            {
                return(_names[(ivg::staname) i]);
            }
        }
    }
    else
    {
        return(_names[type]);
    }
}
// ...........................................................................
std::map<ivg::staname, std::string> Station::get_names( )
// ...........................................................................
{
    return ( _names);
}
// ...........................................................................
void Station::show_names( )
// ...........................................................................
{
    vector<string> cout_names = {"MINSTA", "domes_no" , "cdp" ,"ivs_name" , "lettercode", "description", "corres", "ant_name", "equip_id"};
    for (auto &name: _names )
        if(name.first != 0)
            cout << name.first <<  " " << cout_names.at(name.first) << "->" << name.second << endl;
}

// setter
// ...........................................................................
void Station::set_xyz0( Matrix &xyz )
// ...........................................................................
{
    _pos0 = xyz;
}
// ...........................................................................
void Station::set_vel0( Matrix &vel )
// ...........................................................................
{
    _vel0 = vel;
}
// ...........................................................................
void Station::set_refepoch( ivg::Date refepoch )
// ...........................................................................
{
    _refepoch = refepoch;
}
// ...........................................................................
void Station::set_name(ivg::staname type, string value)
// ...........................................................................
{
    value = remove_spaces_end(value);
    if(value.size()>0)
    {
        _names[type] = value;
    }
}



} // # namespace ivg

